# This is a basic workflow to help you get started with Actions
name: Compile module

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "compile"
  compile:
    name: Compile on ${{ matrix.os }} for nginx ${{ matrix.nginx_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        nginx_version: ['1.18.0', '1.19.0']
        # The type of runner that the job will run on
        os: [ubuntu-latest, ubuntu-16.04]
   

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies with apt
      run: sudo apt-get install yasm gcc make -y

    # Compile ffmpeg (since it is required for libavcodec and libavfilter)
    - name: Compile ffmpeg
      run: |
        cd $GITHUB_WORKSPACE
        wget https://ffmpeg.org/releases/ffmpeg-4.2.3.tar.gz
        tar -xzvf ffmpeg-4.2.3.tar.gz
        cd $GITHUB_WORKSPACE/ffmpeg-4.2.3
        ./configure \
        --enable-shared \
        --enable-gpl \
        --enable-nonfree \
        --extra-cflags='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security ' \
        --extra-ldflags='-Wl,-z,relro'
        make
        export LD_LIBRARY_PATH=/usr/local/lib
        export LIBRARY_PATH=/usr/local/lib
        export C_INCLUDE_PATH=/usr/local/include

    # Runs a set of commands using the runners shell
    - name: Download nginx ${{ matrix.nginx_version }}
      run: |
        cd $GITHUB_WORKSPACE
        wget https://nginx.org/download/nginx-${{ matrix.nginx_version }}.tar.gz
        tar -xzvf nginx-${{ matrix.nginx_version }}.tar.gz

    - name: Compile dynamic module
      run: |
        cd $GITHUB_WORKSPACE/nginx-${{ matrix.nginx_version }}
        ./configure --with-compat --add-dynamic-module=$GITHUB_WORKSPACE/nginx-vod-module
        make modules

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: nginx-vod-module for nginx ${{ matrix.nginx_version }} on ${{ matrix.os }}
        # A file, directory or wildcard pattern that describes what to upload
        path: $GITHUB_WORKSPACE/nginx-${{ matrix.nginx_version }}/objs
